
lab6_bonus_Group18.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000094  00800100  00000230  000002a4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000230  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000338  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000368  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000028  00000000  00000000  000003a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000087b  00000000  00000000  000003d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000705  00000000  00000000  00000c4b  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000366  00000000  00000000  00001350  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000007c  00000000  00000000  000016b8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003c1  00000000  00000000  00001734  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000029a  00000000  00000000  00001af5  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000030  00000000  00000000  00001d8f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e0 e3       	ldi	r30, 0x30	; 48
  7c:	f2 e0       	ldi	r31, 0x02	; 2
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a4 39       	cpi	r26, 0x94	; 148
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>
  8a:	0e 94 59 00 	call	0xb2	; 0xb2 <main>
  8e:	0c 94 16 01 	jmp	0x22c	; 0x22c <_exit>

00000092 <__bad_interrupt>:
  92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <pccout>:
#define F_CPU 1000000UL
#include <avr/io.h>
#include <util/delay.h>

void pccout(int t ){
	TCNT0=t;
  96:	86 bd       	out	0x26, r24	; 38
	TCCR0A=0;
  98:	14 bc       	out	0x24, r1	; 36
	TCCR0B=0b00000101;
  9a:	85 e0       	ldi	r24, 0x05	; 5
  9c:	85 bd       	out	0x25, r24	; 37
	while((TIFR0&(1<<TOV0))==0);
  9e:	a8 9b       	sbis	0x15, 0	; 21
  a0:	fe cf       	rjmp	.-4      	; 0x9e <pccout+0x8>
	TCCR0B = 0;
  a2:	15 bc       	out	0x25, r1	; 37
	TIFR0 = (1<<TOV0);
  a4:	81 e0       	ldi	r24, 0x01	; 1
  a6:	85 bb       	out	0x15, r24	; 21
	PORTC = PORTC^0b00100000; //用於控制是否輸出 ,開跟關
  a8:	98 b1       	in	r25, 0x08	; 8
  aa:	80 e2       	ldi	r24, 0x20	; 32
  ac:	89 27       	eor	r24, r25
  ae:	88 b9       	out	0x08, r24	; 8
  b0:	08 95       	ret

000000b2 <main>:
}
int array []= {1,0,1,2,2,2,1,1,1,4,4,4,3,3,3,3,3,3,1,0,1,2,2,2,1,1,1,5,5,5,4,4,4,4,4,4,
	1,0,1,8,8,8,6,6,6,4,4,4,3,3,3,2,2,2,2,2,7,0,7,6,6,6,4,4,4,5,5,5,4,4,4,4,4,4};

int main(void)
{
  b2:	6f 92       	push	r6
  b4:	7f 92       	push	r7
  b6:	8f 92       	push	r8
  b8:	9f 92       	push	r9
  ba:	af 92       	push	r10
  bc:	bf 92       	push	r11
  be:	cf 92       	push	r12
  c0:	df 92       	push	r13
  c2:	ef 92       	push	r14
  c4:	ff 92       	push	r15
  c6:	0f 93       	push	r16
  c8:	1f 93       	push	r17
  ca:	cf 93       	push	r28
  cc:	df 93       	push	r29
	int stat = 0, idx = 0, count = 0;
	DDRB=0x7F; //0x7F=0b01111111
  ce:	8f e7       	ldi	r24, 0x7F	; 127
  d0:	84 b9       	out	0x04, r24	; 4
	DDRD=0x0;  //pinmode
  d2:	1a b8       	out	0x0a, r1	; 10
	DDRC=0b00100000;
  d4:	80 e2       	ldi	r24, 0x20	; 32
  d6:	87 b9       	out	0x07, r24	; 7
	PORTC=0xFF; //digitalwrrite
  d8:	8f ef       	ldi	r24, 0xFF	; 255
  da:	88 b9       	out	0x08, r24	; 8
	//PORTD=0xFF;
	PORTB=0Xff;
  dc:	85 b9       	out	0x05, r24	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  de:	89 ef       	ldi	r24, 0xF9	; 249
  e0:	90 e0       	ldi	r25, 0x00	; 0
  e2:	01 97       	sbiw	r24, 0x01	; 1
  e4:	f1 f7       	brne	.-4      	; 0xe2 <main+0x30>
  e6:	00 c0       	rjmp	.+0      	; 0xe8 <main+0x36>
  e8:	00 00       	nop
	
	while (1){
		_delay_ms(1);
		count++;
  ea:	01 e0       	ldi	r16, 0x01	; 1
  ec:	10 e0       	ldi	r17, 0x00	; 0
int array []= {1,0,1,2,2,2,1,1,1,4,4,4,3,3,3,3,3,3,1,0,1,2,2,2,1,1,1,5,5,5,4,4,4,4,4,4,
	1,0,1,8,8,8,6,6,6,4,4,4,3,3,3,2,2,2,2,2,7,0,7,6,6,6,4,4,4,5,5,5,4,4,4,4,4,4};

int main(void)
{
	int stat = 0, idx = 0, count = 0;
  ee:	e1 2c       	mov	r14, r1
  f0:	f1 2c       	mov	r15, r1
  f2:	c0 e0       	ldi	r28, 0x00	; 0
  f4:	d0 e0       	ldi	r29, 0x00	; 0
			PORTB = 0b11000110;//C'
			pccout (249);
		}
		else
		{
			PORTB = 0xFF;
  f6:	dd 24       	eor	r13, r13
  f8:	da 94       	dec	r13
		else if(stat == 7){
			PORTB = 0b10000000;//B
			pccout (248);
		}
		else if(stat == 8){
			PORTB = 0b11000110;//C'
  fa:	0f 2e       	mov	r0, r31
  fc:	f6 ec       	ldi	r31, 0xC6	; 198
  fe:	cf 2e       	mov	r12, r31
 100:	f0 2d       	mov	r31, r0
		else if(stat == 5){
			PORTB = 0b10000010;//G
			pccout (246);
		}
		else if(stat == 6){
			PORTB = 0b10001000;//A
 102:	0f 2e       	mov	r0, r31
 104:	f8 e8       	ldi	r31, 0x88	; 136
 106:	6f 2e       	mov	r6, r31
 108:	f0 2d       	mov	r31, r0
		else if(stat == 4){
			PORTB = 0b10001110;//F
			pccout (245);
		}
		else if(stat == 5){
			PORTB = 0b10000010;//G
 10a:	0f 2e       	mov	r0, r31
 10c:	f2 e8       	ldi	r31, 0x82	; 130
 10e:	7f 2e       	mov	r7, r31
 110:	f0 2d       	mov	r31, r0
		else if(stat == 3){
			PORTB = 0b10000110;//E
			pccout (244);
		}
		else if(stat == 4){
			PORTB = 0b10001110;//F
 112:	0f 2e       	mov	r0, r31
 114:	fe e8       	ldi	r31, 0x8E	; 142
 116:	8f 2e       	mov	r8, r31
 118:	f0 2d       	mov	r31, r0
		else if(stat == 2){
			PORTB = 0b11000000;//D
			pccout (243);
		}
		else if(stat == 3){
			PORTB = 0b10000110;//E
 11a:	0f 2e       	mov	r0, r31
 11c:	f6 e8       	ldi	r31, 0x86	; 134
 11e:	9f 2e       	mov	r9, r31
 120:	f0 2d       	mov	r31, r0
		if(stat == 1){
			PORTB = 0b11000110;//C
			pccout (241);
		}
		else if(stat == 2){
			PORTB = 0b11000000;//D
 122:	0f 2e       	mov	r0, r31
 124:	f0 ec       	ldi	r31, 0xC0	; 192
 126:	af 2e       	mov	r10, r31
 128:	f0 2d       	mov	r31, r0
 12a:	64 c0       	rjmp	.+200    	; 0x1f4 <main+0x142>
 12c:	89 ef       	ldi	r24, 0xF9	; 249
 12e:	90 e0       	ldi	r25, 0x00	; 0
 130:	01 97       	sbiw	r24, 0x01	; 1
 132:	f1 f7       	brne	.-4      	; 0x130 <main+0x7e>
 134:	00 c0       	rjmp	.+0      	; 0x136 <main+0x84>
 136:	00 00       	nop
	//PORTD=0xFF;
	PORTB=0Xff;
	
	while (1){
		_delay_ms(1);
		count++;
 138:	0f 5f       	subi	r16, 0xFF	; 255
 13a:	1f 4f       	sbci	r17, 0xFF	; 255
		if (count > 150)
 13c:	07 39       	cpi	r16, 0x97	; 151
 13e:	11 05       	cpc	r17, r1
 140:	64 f0       	brlt	.+24     	; 0x15a <main+0xa8>
		{
			stat = array[idx++];
 142:	f7 01       	movw	r30, r14
 144:	ee 0f       	add	r30, r30
 146:	ff 1f       	adc	r31, r31
 148:	e0 50       	subi	r30, 0x00	; 0
 14a:	ff 4f       	sbci	r31, 0xFF	; 255
 14c:	c0 81       	ld	r28, Z
 14e:	d1 81       	ldd	r29, Z+1	; 0x01
 150:	c7 01       	movw	r24, r14
 152:	01 96       	adiw	r24, 0x01	; 1
 154:	7c 01       	movw	r14, r24
			count=0;
 156:	00 e0       	ldi	r16, 0x00	; 0
 158:	10 e0       	ldi	r17, 0x00	; 0
		}
		if(idx > 75)
 15a:	9c e4       	ldi	r25, 0x4C	; 76
 15c:	e9 16       	cp	r14, r25
 15e:	f1 04       	cpc	r15, r1
 160:	0c f0       	brlt	.+2      	; 0x164 <main+0xb2>
 162:	53 c0       	rjmp	.+166    	; 0x20a <main+0x158>
			break;
		
		
		
		if(stat == 1){
 164:	c1 30       	cpi	r28, 0x01	; 1
 166:	d1 05       	cpc	r29, r1
 168:	31 f4       	brne	.+12     	; 0x176 <main+0xc4>
			PORTB = 0b11000110;//C
 16a:	c5 b8       	out	0x05, r12	; 5
			pccout (241);
 16c:	81 ef       	ldi	r24, 0xF1	; 241
 16e:	90 e0       	ldi	r25, 0x00	; 0
 170:	0e 94 4b 00 	call	0x96	; 0x96 <pccout>
 174:	db cf       	rjmp	.-74     	; 0x12c <main+0x7a>
		}
		else if(stat == 2){
 176:	c2 30       	cpi	r28, 0x02	; 2
 178:	d1 05       	cpc	r29, r1
 17a:	31 f4       	brne	.+12     	; 0x188 <main+0xd6>
			PORTB = 0b11000000;//D
 17c:	a5 b8       	out	0x05, r10	; 5
			pccout (243);
 17e:	83 ef       	ldi	r24, 0xF3	; 243
 180:	90 e0       	ldi	r25, 0x00	; 0
 182:	0e 94 4b 00 	call	0x96	; 0x96 <pccout>
 186:	d2 cf       	rjmp	.-92     	; 0x12c <main+0x7a>
		}
		else if(stat == 3){
 188:	c3 30       	cpi	r28, 0x03	; 3
 18a:	d1 05       	cpc	r29, r1
 18c:	31 f4       	brne	.+12     	; 0x19a <main+0xe8>
			PORTB = 0b10000110;//E
 18e:	95 b8       	out	0x05, r9	; 5
			pccout (244);
 190:	84 ef       	ldi	r24, 0xF4	; 244
 192:	90 e0       	ldi	r25, 0x00	; 0
 194:	0e 94 4b 00 	call	0x96	; 0x96 <pccout>
 198:	c9 cf       	rjmp	.-110    	; 0x12c <main+0x7a>
		}
		else if(stat == 4){
 19a:	c4 30       	cpi	r28, 0x04	; 4
 19c:	d1 05       	cpc	r29, r1
 19e:	31 f4       	brne	.+12     	; 0x1ac <main+0xfa>
			PORTB = 0b10001110;//F
 1a0:	85 b8       	out	0x05, r8	; 5
			pccout (245);
 1a2:	85 ef       	ldi	r24, 0xF5	; 245
 1a4:	90 e0       	ldi	r25, 0x00	; 0
 1a6:	0e 94 4b 00 	call	0x96	; 0x96 <pccout>
 1aa:	c0 cf       	rjmp	.-128    	; 0x12c <main+0x7a>
		}
		else if(stat == 5){
 1ac:	c5 30       	cpi	r28, 0x05	; 5
 1ae:	d1 05       	cpc	r29, r1
 1b0:	31 f4       	brne	.+12     	; 0x1be <main+0x10c>
			PORTB = 0b10000010;//G
 1b2:	75 b8       	out	0x05, r7	; 5
			pccout (246);
 1b4:	86 ef       	ldi	r24, 0xF6	; 246
 1b6:	90 e0       	ldi	r25, 0x00	; 0
 1b8:	0e 94 4b 00 	call	0x96	; 0x96 <pccout>
 1bc:	b7 cf       	rjmp	.-146    	; 0x12c <main+0x7a>
		}
		else if(stat == 6){
 1be:	c6 30       	cpi	r28, 0x06	; 6
 1c0:	d1 05       	cpc	r29, r1
 1c2:	31 f4       	brne	.+12     	; 0x1d0 <main+0x11e>
			PORTB = 0b10001000;//A
 1c4:	65 b8       	out	0x05, r6	; 5
			pccout (247);
 1c6:	87 ef       	ldi	r24, 0xF7	; 247
 1c8:	90 e0       	ldi	r25, 0x00	; 0
 1ca:	0e 94 4b 00 	call	0x96	; 0x96 <pccout>
 1ce:	ae cf       	rjmp	.-164    	; 0x12c <main+0x7a>
		}
		else if(stat == 7){
 1d0:	c7 30       	cpi	r28, 0x07	; 7
 1d2:	d1 05       	cpc	r29, r1
 1d4:	31 f4       	brne	.+12     	; 0x1e2 <main+0x130>
			PORTB = 0b10000000;//B
 1d6:	b5 b8       	out	0x05, r11	; 5
			pccout (248);
 1d8:	88 ef       	ldi	r24, 0xF8	; 248
 1da:	90 e0       	ldi	r25, 0x00	; 0
 1dc:	0e 94 4b 00 	call	0x96	; 0x96 <pccout>
 1e0:	a5 cf       	rjmp	.-182    	; 0x12c <main+0x7a>
		}
		else if(stat == 8){
 1e2:	c8 30       	cpi	r28, 0x08	; 8
 1e4:	d1 05       	cpc	r29, r1
 1e6:	31 f4       	brne	.+12     	; 0x1f4 <main+0x142>
			PORTB = 0b11000110;//C'
 1e8:	c5 b8       	out	0x05, r12	; 5
			pccout (249);
 1ea:	89 ef       	ldi	r24, 0xF9	; 249
 1ec:	90 e0       	ldi	r25, 0x00	; 0
 1ee:	0e 94 4b 00 	call	0x96	; 0x96 <pccout>
 1f2:	9c cf       	rjmp	.-200    	; 0x12c <main+0x7a>
		}
		else
		{
			PORTB = 0xFF;
 1f4:	d5 b8       	out	0x05, r13	; 5
 1f6:	87 ee       	ldi	r24, 0xE7	; 231
 1f8:	93 e0       	ldi	r25, 0x03	; 3
 1fa:	01 97       	sbiw	r24, 0x01	; 1
 1fc:	f1 f7       	brne	.-4      	; 0x1fa <main+0x148>
 1fe:	00 c0       	rjmp	.+0      	; 0x200 <main+0x14e>
 200:	00 00       	nop
		else if(stat == 6){
			PORTB = 0b10001000;//A
			pccout (247);
		}
		else if(stat == 7){
			PORTB = 0b10000000;//B
 202:	68 94       	set
 204:	bb 24       	eor	r11, r11
 206:	b7 f8       	bld	r11, 7
 208:	91 cf       	rjmp	.-222    	; 0x12c <main+0x7a>
			PORTB = 0xFF;
			_delay_ms(4);
		}
		
	}
}
 20a:	80 e0       	ldi	r24, 0x00	; 0
 20c:	90 e0       	ldi	r25, 0x00	; 0
 20e:	df 91       	pop	r29
 210:	cf 91       	pop	r28
 212:	1f 91       	pop	r17
 214:	0f 91       	pop	r16
 216:	ff 90       	pop	r15
 218:	ef 90       	pop	r14
 21a:	df 90       	pop	r13
 21c:	cf 90       	pop	r12
 21e:	bf 90       	pop	r11
 220:	af 90       	pop	r10
 222:	9f 90       	pop	r9
 224:	8f 90       	pop	r8
 226:	7f 90       	pop	r7
 228:	6f 90       	pop	r6
 22a:	08 95       	ret

0000022c <_exit>:
 22c:	f8 94       	cli

0000022e <__stop_program>:
 22e:	ff cf       	rjmp	.-2      	; 0x22e <__stop_program>
